{
  "schemaVersion" : 6,
  "version" : 11,
  "pipelineId" : "WebsocketProbespipelinead55610c-7539-4356-af95-b6d5bbc9cb17",
  "title" : "Websocket Probes pipeline",
  "description" : "",
  "uuid" : "406f965f-feb5-410d-8b24-52fcec0d88b9",
  "configuration" : [ {
    "name" : "executionMode",
    "value" : "STANDALONE"
  }, {
    "name" : "deliveryGuarantee",
    "value" : "AT_LEAST_ONCE"
  }, {
    "name" : "startEventStage",
    "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
  }, {
    "name" : "stopEventStage",
    "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
  }, {
    "name" : "shouldRetry",
    "value" : true
  }, {
    "name" : "retryAttempts",
    "value" : -1
  }, {
    "name" : "memoryLimit",
    "value" : "${jvm:maxMemoryMB() * 0.85}"
  }, {
    "name" : "memoryLimitExceeded",
    "value" : "LOG"
  }, {
    "name" : "notifyOnStates",
    "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
  }, {
    "name" : "emailIDs",
    "value" : [ ]
  }, {
    "name" : "constants",
    "value" : [ {
      "key" : "measurement",
      "value" : "probe_data"
    } ]
  }, {
    "name" : "badRecordsHandling",
    "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
  }, {
    "name" : "errorRecordPolicy",
    "value" : "ORIGINAL_RECORD"
  }, {
    "name" : "workerCount",
    "value" : 0
  }, {
    "name" : "clusterSlaveMemory",
    "value" : 2048
  }, {
    "name" : "clusterSlaveJavaOpts",
    "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
  }, {
    "name" : "clusterLauncherEnv",
    "value" : [ ]
  }, {
    "name" : "mesosDispatcherURL",
    "value" : null
  }, {
    "name" : "hdfsS3ConfDir",
    "value" : null
  }, {
    "name" : "rateLimit",
    "value" : 0
  }, {
    "name" : "maxRunners",
    "value" : 0
  }, {
    "name" : "shouldCreateFailureSnapshot",
    "value" : true
  }, {
    "name" : "webhookConfigs",
    "value" : [ ]
  }, {
    "name" : "sparkConfigs",
    "value" : [ ]
  }, {
    "name" : "statsAggregatorStage",
    "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget::1"
  }, {
    "name" : "edgeHttpUrl",
    "value" : "http://localhost:18633"
  }, {
    "name" : "runnerIdleTIme",
    "value" : 60
  }, {
    "name" : "testOriginStage",
    "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
  }, {
    "name" : "logLevel",
    "value" : "INFO"
  }, {
    "name" : "amazonEMRConfig.userRegion",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.userRegionCustom",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.s3StagingUri",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.clusterPrefix",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.clusterId",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.terminateCluster",
    "value" : false
  }, {
    "name" : "amazonEMRConfig.enableEMRDebugging",
    "value" : true
  }, {
    "name" : "amazonEMRConfig.s3LogUri",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.serviceRole",
    "value" : "EMR_DefaultRole"
  }, {
    "name" : "amazonEMRConfig.jobFlowRole",
    "value" : "EMR_EC2_DefaultRole"
  }, {
    "name" : "amazonEMRConfig.visibleToAllUsers",
    "value" : true
  }, {
    "name" : "amazonEMRConfig.loggingEnabled",
    "value" : true
  }, {
    "name" : "amazonEMRConfig.ec2SubnetId",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.masterSecurityGroup",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.slaveSecurityGroup",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.instanceCount",
    "value" : 2
  }, {
    "name" : "amazonEMRConfig.masterInstanceType",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.slaveInstanceType",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.masterInstanceTypeCustom",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.slaveInstanceTypeCustom",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.accessKey",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.secretKey",
    "value" : null
  }, {
    "name" : "amazonEMRConfig.provisionNewCluster",
    "value" : false
  } ],
  "uiInfo" : {
    "previewConfig" : {
      "previewSource" : "CONFIGURED_SOURCE",
      "batchSize" : "1",
      "timeout" : "60000",
      "writeToDestinations" : true,
      "executeLifecycleEvents" : true,
      "showHeader" : false,
      "showFieldType" : true,
      "rememberMe" : false
    }
  },
  "fragments" : [ ],
  "stages" : [ {
    "instanceName" : "MQTTSubscriber_01",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_origin_mqtt_MqttClientDSource",
    "stageVersion" : "3",
    "configuration" : [ {
      "name" : "commonConf.brokerUrl",
      "value" : "tcp://mosquitto:1883"
    }, {
      "name" : "commonConf.clientId",
      "value" : "${pipeline:id()}"
    }, {
      "name" : "commonConf.qos",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "commonConf.persistenceMechanism",
      "value" : "MEMORY"
    }, {
      "name" : "commonConf.dataDir",
      "value" : "/tmp"
    }, {
      "name" : "commonConf.keepAlive",
      "value" : 60
    }, {
      "name" : "commonConf.useAuth",
      "value" : false
    }, {
      "name" : "commonConf.username",
      "value" : null
    }, {
      "name" : "commonConf.password",
      "value" : null
    }, {
      "name" : "commonConf.tlsConfig.tlsEnabled",
      "value" : false
    }, {
      "name" : "commonConf.tlsConfig.trustStoreFilePath",
      "value" : null
    }, {
      "name" : "commonConf.tlsConfig.trustStoreType",
      "value" : "JKS"
    }, {
      "name" : "commonConf.tlsConfig.trustStorePassword",
      "value" : null
    }, {
      "name" : "commonConf.tlsConfig.trustStoreAlgorithm",
      "value" : "SunX509"
    }, {
      "name" : "commonConf.tlsConfig.useDefaultProtocols",
      "value" : true
    }, {
      "name" : "commonConf.tlsConfig.protocols",
      "value" : [ ]
    }, {
      "name" : "commonConf.tlsConfig.useDefaultCiperSuites",
      "value" : true
    }, {
      "name" : "commonConf.tlsConfig.cipherSuites",
      "value" : [ ]
    }, {
      "name" : "subscriberConf.topicFilters",
      "value" : [ "telemetry/probes" ]
    }, {
      "name" : "subscriberConf.dataFormat",
      "value" : "JSON"
    }, {
      "name" : "subscriberConf.dataFormatConfig.compression",
      "value" : "NONE"
    }, {
      "name" : "subscriberConf.dataFormatConfig.filePatternInArchive",
      "value" : "*"
    }, {
      "name" : "subscriberConf.dataFormatConfig.charset",
      "value" : "UTF-8"
    }, {
      "name" : "subscriberConf.dataFormatConfig.removeCtrlChars",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.textMaxLineLen",
      "value" : 1024
    }, {
      "name" : "subscriberConf.dataFormatConfig.useCustomDelimiter",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.customDelimiter",
      "value" : "\\r\\n"
    }, {
      "name" : "subscriberConf.dataFormatConfig.includeCustomDelimiterInTheText",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.jsonMaxObjectLen",
      "value" : 4096
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvFileFormat",
      "value" : "CSV"
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvHeader",
      "value" : "NO_HEADER"
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvAllowExtraColumns",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvExtraColumnPrefix",
      "value" : "_extra_"
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvMaxObjectLen",
      "value" : 1024
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvCustomDelimiter",
      "value" : "|"
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvCustomEscape",
      "value" : "\\"
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvCustomQuote",
      "value" : "\""
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvEnableComments",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvCommentMarker",
      "value" : "#"
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvIgnoreEmptyLines",
      "value" : true
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvRecordType",
      "value" : "LIST_MAP"
    }, {
      "name" : "subscriberConf.dataFormatConfig.csvSkipStartLines",
      "value" : 0
    }, {
      "name" : "subscriberConf.dataFormatConfig.parseNull",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.nullConstant",
      "value" : "\\\\N"
    }, {
      "name" : "subscriberConf.dataFormatConfig.xmlRecordElement",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.includeFieldXpathAttributes",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.xPathNamespaceContext",
      "value" : [ ]
    }, {
      "name" : "subscriberConf.dataFormatConfig.outputFieldAttributes",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.xmlMaxObjectLen",
      "value" : 4096
    }, {
      "name" : "subscriberConf.dataFormatConfig.logMode",
      "value" : "COMMON_LOG_FORMAT"
    }, {
      "name" : "subscriberConf.dataFormatConfig.logMaxObjectLen",
      "value" : 1024
    }, {
      "name" : "subscriberConf.dataFormatConfig.retainOriginalLine",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.customLogFormat",
      "value" : "%h %l %u %t \"%r\" %>s %b"
    }, {
      "name" : "subscriberConf.dataFormatConfig.regex",
      "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
    }, {
      "name" : "subscriberConf.dataFormatConfig.fieldPathsToGroupName",
      "value" : [ {
        "fieldPath" : "/",
        "group" : 1
      } ]
    }, {
      "name" : "subscriberConf.dataFormatConfig.grokPatternDefinition",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.grokPattern",
      "value" : "%{COMMONAPACHELOG}"
    }, {
      "name" : "subscriberConf.dataFormatConfig.onParseError",
      "value" : "ERROR"
    }, {
      "name" : "subscriberConf.dataFormatConfig.maxStackTraceLines",
      "value" : 50
    }, {
      "name" : "subscriberConf.dataFormatConfig.enableLog4jCustomLogFormat",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.log4jCustomLogFormat",
      "value" : "%r [%t] %-5p %c %x - %m%n"
    }, {
      "name" : "subscriberConf.dataFormatConfig.avroSchemaSource",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.avroSchema",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.schemaRegistryUrls",
      "value" : [ ]
    }, {
      "name" : "subscriberConf.dataFormatConfig.schemaLookupMode",
      "value" : "SUBJECT"
    }, {
      "name" : "subscriberConf.dataFormatConfig.subject",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.schemaId",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.protoDescriptorFile",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.messageType",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.isDelimited",
      "value" : true
    }, {
      "name" : "subscriberConf.dataFormatConfig.binaryMaxObjectLen",
      "value" : 1024
    }, {
      "name" : "subscriberConf.dataFormatConfig.datagramMode",
      "value" : "SYSLOG"
    }, {
      "name" : "subscriberConf.dataFormatConfig.typesDbPath",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.convertTime",
      "value" : false
    }, {
      "name" : "subscriberConf.dataFormatConfig.excludeInterval",
      "value" : true
    }, {
      "name" : "subscriberConf.dataFormatConfig.authFilePath",
      "value" : null
    }, {
      "name" : "subscriberConf.dataFormatConfig.netflowOutputValuesMode",
      "value" : "RAW_AND_INTERPRETED"
    }, {
      "name" : "subscriberConf.dataFormatConfig.maxTemplateCacheSize",
      "value" : -1
    }, {
      "name" : "subscriberConf.dataFormatConfig.templateCacheTimeoutMs",
      "value" : -1
    }, {
      "name" : "subscriberConf.dataFormatConfig.netflowOutputValuesModeDatagram",
      "value" : "RAW_AND_INTERPRETED"
    }, {
      "name" : "subscriberConf.dataFormatConfig.maxTemplateCacheSizeDatagram",
      "value" : -1
    }, {
      "name" : "subscriberConf.dataFormatConfig.templateCacheTimeoutMsDatagram",
      "value" : -1
    }, {
      "name" : "subscriberConf.dataFormatConfig.wholeFileMaxObjectLen",
      "value" : 8192
    }, {
      "name" : "subscriberConf.dataFormatConfig.rateLimit",
      "value" : "-1"
    }, {
      "name" : "subscriberConf.dataFormatConfig.verifyChecksum",
      "value" : false
    }, {
      "name" : "stageOnRecordError",
      "value" : "DISCARD"
    }, {
      "name" : "subscriberConf.dataFormatConfig.excelHeader",
      "value" : null
    }, {
      "name" : "commonConf.cleanSession",
      "value" : false
    }, {
      "name" : "commonConf.tlsConfig.keyStoreFilePath",
      "value" : null
    }, {
      "name" : "commonConf.tlsConfig.keyStoreType",
      "value" : "JKS"
    }, {
      "name" : "commonConf.tlsConfig.keyStorePassword",
      "value" : null
    }, {
      "name" : "commonConf.tlsConfig.keyStoreAlgorithm",
      "value" : "SunX509"
    } ],
    "uiInfo" : {
      "description" : "",
      "label" : "Probe Subscriber",
      "xPos" : 60,
      "yPos" : 50,
      "stageType" : "SOURCE"
    },
    "inputLanes" : [ ],
    "outputLanes" : [ "MQTTSubscriber_01OutputLane15378113100160" ],
    "eventLanes" : [ ],
    "services" : [ ]
  }, {
    "instanceName" : "ExpressionEvaluator_01",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
    "stageVersion" : "2",
    "configuration" : [ {
      "name" : "expressionProcessorConfigs",
      "value" : [ {
        "fieldToSet" : "/sensor",
        "expression" : "${str:toUpper(record:value('/sensor'))}"
      } ]
    }, {
      "name" : "headerAttributeConfigs",
      "value" : [ { } ]
    }, {
      "name" : "fieldAttributeConfigs",
      "value" : [ {
        "fieldToSet" : "/"
      } ]
    }, {
      "name" : "stageOnRecordError",
      "value" : "TO_ERROR"
    }, {
      "name" : "stageRequiredFields",
      "value" : [ ]
    }, {
      "name" : "stageRecordPreconditions",
      "value" : [ ]
    } ],
    "uiInfo" : {
      "description" : "",
      "label" : "Uppercase MAC",
      "xPos" : 280,
      "yPos" : 50,
      "stageType" : "PROCESSOR"
    },
    "inputLanes" : [ "MQTTSubscriber_01OutputLane15378113100160" ],
    "outputLanes" : [ "ExpressionEvaluator_01OutputLane15396248797930" ],
    "eventLanes" : [ ],
    "services" : [ ]
  }, {
    "instanceName" : "RecordDeduplicator_01",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_processor_dedup_DeDupDProcessor",
    "stageVersion" : "1",
    "configuration" : [ {
      "name" : "recordCountWindow",
      "value" : 1000000
    }, {
      "name" : "timeWindowSecs",
      "value" : 60
    }, {
      "name" : "compareFields",
      "value" : "SPECIFIED_FIELDS"
    }, {
      "name" : "fieldsToCompare",
      "value" : [ "/sensor", "/srcMac" ]
    }, {
      "name" : "stageRequiredFields",
      "value" : [ ]
    }, {
      "name" : "stageRecordPreconditions",
      "value" : [ ]
    } ],
    "uiInfo" : {
      "outputStreamLabels" : [ "Unique Records", "Duplicate Records" ],
      "yPos" : 110,
      "stageType" : "PROCESSOR",
      "description" : "",
      "label" : "Record Deduplicator 1",
      "xPos" : 500
    },
    "inputLanes" : [ "ExpressionEvaluator_01OutputLane15396248797930" ],
    "outputLanes" : [ "RecordDeduplicator_01OutputLane15603459164460", "RecordDeduplicator_01OutputLane15603459164461" ],
    "eventLanes" : [ ],
    "services" : [ ]
  }, {
    "instanceName" : "Trash_01",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_destination_devnull_NullDTarget",
    "stageVersion" : "1",
    "configuration" : [ ],
    "uiInfo" : {
      "description" : "",
      "label" : "Trash 1",
      "xPos" : 720,
      "yPos" : 170,
      "stageType" : "TARGET"
    },
    "inputLanes" : [ "RecordDeduplicator_01OutputLane15603459164461" ],
    "outputLanes" : [ ],
    "eventLanes" : [ ],
    "services" : [ ]
  }, {
    "instanceName" : "Aggregator_01",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_processor_aggregation_AggregationDProcessor",
    "stageVersion" : "2",
    "configuration" : [ {
      "name" : "config.windowType",
      "value" : "SLIDING"
    }, {
      "name" : "config.timeWindow",
      "value" : "TW_5S"
    }, {
      "name" : "config.windowLength",
      "value" : "TW_1M"
    }, {
      "name" : "config.timeZoneID",
      "value" : "UTC"
    }, {
      "name" : "config.timeWindowsToRemember",
      "value" : 3
    }, {
      "name" : "config.aggregatorConfigs",
      "value" : [ {
        "enabled" : true,
        "filter" : false,
        "aggregationFunction" : "COUNT",
        "aggregationExpression" : "1",
        "groupBy" : true,
        "aggregationName" : "count",
        "groupByExpression" : "${record:value('/sensor')}",
        "aggregationTitle" : "Presence Count"
      } ]
    }, {
      "name" : "config.allAggregatorsEvent",
      "value" : true
    }, {
      "name" : "config.perAggregatorEvents",
      "value" : false
    }, {
      "name" : "config.eventRecordWithTextField",
      "value" : false
    }, {
      "name" : "stageOnRecordError",
      "value" : "TO_ERROR"
    }, {
      "name" : "stageRequiredFields",
      "value" : [ ]
    }, {
      "name" : "stageRecordPreconditions",
      "value" : [ ]
    } ],
    "uiInfo" : {
      "description" : "",
      "label" : "Aggregator 1",
      "xPos" : 720,
      "yPos" : 40,
      "stageType" : "PROCESSOR"
    },
    "inputLanes" : [ "RecordDeduplicator_01OutputLane15603459164460" ],
    "outputLanes" : [ "Aggregator_01OutputLane15603462398130" ],
    "eventLanes" : [ "Aggregator_01_EventLane" ],
    "services" : [ ]
  }, {
    "instanceName" : "JavaScriptEvaluator_01",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor",
    "stageVersion" : "2",
    "configuration" : [ {
      "name" : "processingMode",
      "value" : "BATCH"
    }, {
      "name" : "initScript",
      "value" : "/**\n * Available Objects:\n * \n *  state: a dict that is preserved between invocations of this script. \n *        Useful for caching bits of data e.g. counters and long-lived resources.\n *\n *  log.<loglevel>(msg, obj...): use instead of print to send log messages to the log4j log instead of stdout.\n *                               loglevel is any log4j level: e.g. info, error, warn, trace.\n *   sdcFunctions.getFieldNull(Record, 'field path'): Receive a constant defined above \n *                          to check if the field is typed field with value null\n *   sdcFunctions.createMap(boolean listMap): Create a map for use as a field in a record. \n *                          Pass true to this function to create a list map (ordered map)\n */\n\n// state['connection'] = new Connection().open();"
    }, {
      "name" : "script",
      "value" : "/**\n * Available constants: \n *   They are to assign a type to a field with a value null.\n *   NULL_BOOLEAN, NULL_CHAR, NULL_BYTE, NULL_SHORT, NULL_INTEGER, NULL_LONG\n *   NULL_FLOATNULL_DOUBLE, NULL_DATE, NULL_DATETIME, NULL_TIME, NULL_DECIMAL\n *   NULL_BYTE_ARRAY, NULL_STRING, NULL_LIST, NULL_MAP\n *\n * Available Objects:\n * \n *  records: an array of records to process, depending on the JavaScript processor\n *           processing mode it may have 1 record or all the records in the batch.\n *\n *  state: a dict that is preserved between invocations of this script. \n *        Useful for caching bits of data e.g. counters.\n *\n *  log.<loglevel>(msg, obj...): use instead of print to send log messages to the log4j log instead of stdout.\n *                               loglevel is any log4j level: e.g. info, error, warn, trace.\n *\n *  output.write(record): writes a record to processor output\n *\n *  error.write(record, message): sends a record to error\n *\n *  sdcFunctions.getFieldNull(Record, 'field path'): Receive a constant defined above\n *                            to check if the field is typed field with value null\n *  sdcFunctions.createRecord(String recordId): Creates a new record.\n *                            Pass a recordId to uniquely identify the record and include enough information to track down the record source. \n *  sdcFunctions.createMap(boolean listMap): Create a map for use as a field in a record.\n *                            Pass true to this function to create a list map (ordered map)\n *\n *  sdcFunctions.createEvent(String type, int version): Creates a new event.\n *                            Create new empty event with standard headers.\n *  sdcFunctions.toEvent(Record): Send event to event stream\n *                            Only events created with sdcFunctions.createEvent are supported.\n *  sdcFunctions.isPreview(): Determine if pipeline is in preview mode.\n *\n * Available Record Header Variables:n *\n *  record.attributes: a map of record header attributes.\n *\n *  record.<header name>: get the value of 'header name'.\n */\n\n// Sample JavaScript code\nfor(var i = 0; i < records.length; i++) {\n  try { \n    var record = records[i].value;\n    var transformedRecord = {};\n    \n    if (record[0] && record[0].groupByElements.length > 0) {\n      for (var j = 0; j < record[0].groupByElements.length; j++) {\n        transformedRecord.sensor = record[0].groupByElements[j];\n        transformedRecord.createdAt = record[0].time;\n        transformedRecord.count = record[0].aggregatable.groups[transformedRecord.sensor].count;\n        records[i].value = transformedRecord;\n        \n        if (records[i].value.sensor) {\n          output.write(records[i]);  \n        }\n      }      \n\t}   \n  } catch (e) {\n    // Send record to error\n    error.write(records[i], e);\n  }\n}"
    }, {
      "name" : "destroyScript",
      "value" : "/**\n * Available Objects:\n * \n *  state: a dict that is preserved between invocations of this script. \n *        Useful for caching bits of data e.g. counters and long-lived resources.\n *\n *  log.<loglevel>(msg, obj...): use instead of print to send log messages to the log4j log instead of stdout.\n *                               loglevel is any log4j level: e.g. info, error, warn, trace.\n *   sdcFunctions.getFieldNull(Record, 'field path'): Receive a constant defined above \n *                          to check if the field is typed field with value null\n *   sdcFunctions.createMap(boolean listMap): Create a map for use as a field in a record. \n *                          Pass true to this function to create a list map (ordered map)\n *   sdcFunctions.createEvent(String type, int version): Creates a new event.\n *                          Create new empty event with standard headers.\n *   sdcFunctions.toEvent(Record): Send event to event stream\n *                          Only events created with sdcFunctions.createEvent are supported.\n */\n\n// state['connection'].close();"
    }, {
      "name" : "stageOnRecordError",
      "value" : "TO_ERROR"
    }, {
      "name" : "stageRequiredFields",
      "value" : [ ]
    }, {
      "name" : "stageRecordPreconditions",
      "value" : [ ]
    } ],
    "uiInfo" : {
      "description" : "",
      "label" : "JavaScript Evaluator 1",
      "xPos" : 940,
      "yPos" : 190,
      "stageType" : "PROCESSOR"
    },
    "inputLanes" : [ "Aggregator_01_EventLane" ],
    "outputLanes" : [ "JavaScriptEvaluator_01OutputLane15603476367110" ],
    "eventLanes" : [ ],
    "services" : [ ]
  }, {
    "instanceName" : "Trash_02",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_destination_devnull_NullDTarget",
    "stageVersion" : "1",
    "configuration" : [ ],
    "uiInfo" : {
      "description" : "",
      "label" : "Trash 2",
      "xPos" : 940,
      "yPos" : 40,
      "stageType" : "TARGET"
    },
    "inputLanes" : [ "Aggregator_01OutputLane15603462398130" ],
    "outputLanes" : [ ],
    "eventLanes" : [ ],
    "services" : [ ]
  }, {
    "instanceName" : "HTTPClient_01",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_destination_http_HttpClientDTarget",
    "stageVersion" : "4",
    "configuration" : [ {
      "name" : "conf.dataGeneratorFormatConfig.charset",
      "value" : "UTF-8"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.csvFileFormat",
      "value" : "CSV"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.csvHeader",
      "value" : "NO_HEADER"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.csvReplaceNewLines",
      "value" : true
    }, {
      "name" : "conf.dataGeneratorFormatConfig.csvReplaceNewLinesString",
      "value" : " "
    }, {
      "name" : "conf.dataGeneratorFormatConfig.csvCustomDelimiter",
      "value" : "|"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.csvCustomEscape",
      "value" : "\\"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.csvCustomQuote",
      "value" : "\""
    }, {
      "name" : "conf.dataGeneratorFormatConfig.jsonMode",
      "value" : "ARRAY_OBJECTS"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.textFieldPath",
      "value" : "/text"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.textRecordSeparator",
      "value" : "\\n"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.textFieldMissingAction",
      "value" : "ERROR"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.textEmptyLineIfNull",
      "value" : false
    }, {
      "name" : "conf.dataGeneratorFormatConfig.avroSchemaSource",
      "value" : null
    }, {
      "name" : "conf.dataGeneratorFormatConfig.avroSchema",
      "value" : null
    }, {
      "name" : "conf.dataGeneratorFormatConfig.registerSchema",
      "value" : false
    }, {
      "name" : "conf.dataGeneratorFormatConfig.schemaRegistryUrlsForRegistration",
      "value" : [ ]
    }, {
      "name" : "conf.dataGeneratorFormatConfig.schemaRegistryUrls",
      "value" : [ ]
    }, {
      "name" : "conf.dataGeneratorFormatConfig.schemaLookupMode",
      "value" : "SUBJECT"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.subject",
      "value" : null
    }, {
      "name" : "conf.dataGeneratorFormatConfig.subjectToRegister",
      "value" : null
    }, {
      "name" : "conf.dataGeneratorFormatConfig.schemaId",
      "value" : null
    }, {
      "name" : "conf.dataGeneratorFormatConfig.includeSchema",
      "value" : true
    }, {
      "name" : "conf.dataGeneratorFormatConfig.avroCompression",
      "value" : "NULL"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.binaryFieldPath",
      "value" : "/"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.protoDescriptorFile",
      "value" : null
    }, {
      "name" : "conf.dataGeneratorFormatConfig.messageType",
      "value" : null
    }, {
      "name" : "conf.dataGeneratorFormatConfig.fileNameEL",
      "value" : null
    }, {
      "name" : "conf.dataGeneratorFormatConfig.wholeFileExistsAction",
      "value" : "TO_ERROR"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.includeChecksumInTheEvents",
      "value" : false
    }, {
      "name" : "conf.dataGeneratorFormatConfig.checksumAlgorithm",
      "value" : "MD5"
    }, {
      "name" : "conf.dataGeneratorFormatConfig.xmlPrettyPrint",
      "value" : true
    }, {
      "name" : "conf.dataGeneratorFormatConfig.xmlValidateSchema",
      "value" : false
    }, {
      "name" : "conf.dataGeneratorFormatConfig.xmlSchema",
      "value" : null
    }, {
      "name" : "conf.dataFormat",
      "value" : "JSON"
    }, {
      "name" : "conf.resourceUrl",
      "value" : "http://api:8000/broadcast/probe"
    }, {
      "name" : "conf.headers",
      "value" : [ ]
    }, {
      "name" : "conf.httpMethod",
      "value" : "POST"
    }, {
      "name" : "conf.methodExpression",
      "value" : null
    }, {
      "name" : "conf.client.transferEncoding",
      "value" : "BUFFERED"
    }, {
      "name" : "conf.client.httpCompression",
      "value" : "NONE"
    }, {
      "name" : "conf.client.connectTimeoutMillis",
      "value" : 0
    }, {
      "name" : "conf.client.readTimeoutMillis",
      "value" : 0
    }, {
      "name" : "conf.client.numThreads",
      "value" : 1
    }, {
      "name" : "conf.client.authType",
      "value" : "NONE"
    }, {
      "name" : "conf.client.useOAuth2",
      "value" : false
    }, {
      "name" : "conf.client.oauth.consumerKey",
      "value" : null
    }, {
      "name" : "conf.client.oauth.consumerSecret",
      "value" : null
    }, {
      "name" : "conf.client.oauth.token",
      "value" : null
    }, {
      "name" : "conf.client.oauth.tokenSecret",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.credentialsGrantType",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.tokenUrl",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.clientId",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.clientSecret",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.username",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.password",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.resourceOwnerClientId",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.resourceOwnerClientSecret",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.algorithm",
      "value" : "NONE"
    }, {
      "name" : "conf.client.oauth2.key",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.jwtClaims",
      "value" : null
    }, {
      "name" : "conf.client.oauth2.transferEncoding",
      "value" : "BUFFERED"
    }, {
      "name" : "conf.client.oauth2.additionalValues",
      "value" : [ { } ]
    }, {
      "name" : "conf.client.basicAuth.username",
      "value" : null
    }, {
      "name" : "conf.client.basicAuth.password",
      "value" : null
    }, {
      "name" : "conf.client.useProxy",
      "value" : false
    }, {
      "name" : "conf.client.proxy.uri",
      "value" : null
    }, {
      "name" : "conf.client.proxy.username",
      "value" : null
    }, {
      "name" : "conf.client.proxy.password",
      "value" : null
    }, {
      "name" : "conf.client.tlsConfig.tlsEnabled",
      "value" : false
    }, {
      "name" : "conf.client.tlsConfig.keyStoreFilePath",
      "value" : null
    }, {
      "name" : "conf.client.tlsConfig.keyStoreType",
      "value" : "JKS"
    }, {
      "name" : "conf.client.tlsConfig.keyStorePassword",
      "value" : null
    }, {
      "name" : "conf.client.tlsConfig.keyStoreAlgorithm",
      "value" : "SunX509"
    }, {
      "name" : "conf.client.tlsConfig.trustStoreFilePath",
      "value" : null
    }, {
      "name" : "conf.client.tlsConfig.trustStoreType",
      "value" : "JKS"
    }, {
      "name" : "conf.client.tlsConfig.trustStorePassword",
      "value" : null
    }, {
      "name" : "conf.client.tlsConfig.trustStoreAlgorithm",
      "value" : "SunX509"
    }, {
      "name" : "conf.client.tlsConfig.useDefaultProtocols",
      "value" : true
    }, {
      "name" : "conf.client.tlsConfig.protocols",
      "value" : [ ]
    }, {
      "name" : "conf.client.tlsConfig.useDefaultCiperSuites",
      "value" : true
    }, {
      "name" : "conf.client.tlsConfig.cipherSuites",
      "value" : [ ]
    }, {
      "name" : "conf.client.requestLoggingConfig.enableRequestLogging",
      "value" : false
    }, {
      "name" : "conf.client.requestLoggingConfig.logLevel",
      "value" : "FINE"
    }, {
      "name" : "conf.client.requestLoggingConfig.verbosity",
      "value" : "HEADERS_ONLY"
    }, {
      "name" : "conf.client.requestLoggingConfig.maxEntitySize",
      "value" : 0
    }, {
      "name" : "conf.singleRequestPerBatch",
      "value" : true
    }, {
      "name" : "conf.rateLimit",
      "value" : 0
    }, {
      "name" : "conf.maxRequestCompletionSecs",
      "value" : 60
    }, {
      "name" : "conf.responseConf.sendResponseToOrigin",
      "value" : false
    }, {
      "name" : "conf.responseConf.responseType",
      "value" : "SUCCESS_RECORDS"
    }, {
      "name" : "stageOnRecordError",
      "value" : "TO_ERROR"
    }, {
      "name" : "stageRequiredFields",
      "value" : [ ]
    }, {
      "name" : "stageRecordPreconditions",
      "value" : [ ]
    } ],
    "uiInfo" : {
      "description" : "",
      "label" : "HTTP Client 1",
      "xPos" : 1160,
      "yPos" : 190,
      "stageType" : "TARGET"
    },
    "inputLanes" : [ "JavaScriptEvaluator_01OutputLane15603476367110" ],
    "outputLanes" : [ ],
    "eventLanes" : [ ],
    "services" : [ ]
  } ],
  "errorStage" : {
    "instanceName" : "Discard_ErrorStage",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
    "stageVersion" : "1",
    "configuration" : [ ],
    "uiInfo" : {
      "description" : "",
      "label" : "Error Records - Discard",
      "xPos" : 1380,
      "yPos" : 50,
      "stageType" : "TARGET"
    },
    "inputLanes" : [ ],
    "outputLanes" : [ ],
    "eventLanes" : [ ],
    "services" : [ ]
  },
  "info" : {
    "pipelineId" : "WebsocketProbespipelinee563bdc0-03ad-4076-bd9c-e15a87167ebe",
    "title" : "Websocket Probes pipeline",
    "description" : "",
    "created" : 1560345885937,
    "lastModified" : 1560349283584,
    "creator" : "admin",
    "lastModifier" : "admin",
    "lastRev" : "0",
    "uuid" : "c06f9c4c-f13a-4059-9c91-d4876d922939",
    "valid" : true,
    "metadata" : {
      "labels" : [ ]
    },
    "name" : "WebsocketProbespipelinee563bdc0-03ad-4076-bd9c-e15a87167ebe",
    "sdcVersion" : "3.7.1",
    "sdcId" : "3ddc4e08-2dfb-11e9-9bcd-e11be2560c4d"
  },
  "metadata" : {
    "labels" : [ ]
  },
  "statsAggregatorStage" : {
    "instanceName" : "Discard_StatsAggregatorStage",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget",
    "stageVersion" : "1",
    "configuration" : [ ],
    "uiInfo" : {
      "description" : "",
      "label" : "Stats Aggregator - Discard",
      "xPos" : 1380,
      "yPos" : 50,
      "stageType" : "TARGET"
    },
    "inputLanes" : [ ],
    "outputLanes" : [ ],
    "eventLanes" : [ ],
    "services" : [ ]
  },
  "startEventStages" : [ {
    "instanceName" : "Discard_StartEventStage",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
    "stageVersion" : "1",
    "configuration" : [ ],
    "uiInfo" : {
      "description" : "",
      "label" : "Start Event - Discard",
      "xPos" : 280,
      "yPos" : 50,
      "stageType" : "TARGET"
    },
    "inputLanes" : [ ],
    "outputLanes" : [ ],
    "eventLanes" : [ ],
    "services" : [ ]
  } ],
  "stopEventStages" : [ {
    "instanceName" : "Discard_StopEventStage",
    "library" : "streamsets-datacollector-basic-lib",
    "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
    "stageVersion" : "1",
    "configuration" : [ ],
    "uiInfo" : {
      "description" : "",
      "label" : "Stop Event - Discard",
      "xPos" : 280,
      "yPos" : 50,
      "stageType" : "TARGET"
    },
    "inputLanes" : [ ],
    "outputLanes" : [ ],
    "eventLanes" : [ ],
    "services" : [ ]
  } ],
  "testOriginStage" : {
    "instanceName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStage",
    "library" : "streamsets-datacollector-dev-lib",
    "stageName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource",
    "stageVersion" : "3",
    "configuration" : [ {
      "name" : "rawData",
      "value" : "{\n  \"f1\": \"abc\",\n  \"f2\": \"xyz\",\n  \"f3\": \"lmn\"\n}"
    }, {
      "name" : "stopAfterFirstBatch",
      "value" : false
    }, {
      "name" : "stageOnRecordError",
      "value" : "TO_ERROR"
    } ],
    "uiInfo" : {
      "stageType" : "SOURCE",
      "label" : "Test Origin - Dev Raw Data Source"
    },
    "inputLanes" : [ ],
    "outputLanes" : [ "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStageOutputLane1" ],
    "eventLanes" : [ ],
    "services" : [ {
      "service" : "com.streamsets.pipeline.api.service.dataformats.DataFormatParserService",
      "serviceVersion" : 1,
      "configuration" : [ {
        "name" : "displayFormats",
        "value" : "DELIMITED,JSON,LOG,SDC_JSON,TEXT,XML"
      }, {
        "name" : "dataFormat",
        "value" : "JSON"
      }, {
        "name" : "dataFormatConfig.compression",
        "value" : "NONE"
      }, {
        "name" : "dataFormatConfig.filePatternInArchive",
        "value" : "*"
      }, {
        "name" : "dataFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "dataFormatConfig.removeCtrlChars",
        "value" : false
      }, {
        "name" : "dataFormatConfig.textMaxLineLen",
        "value" : 1024
      }, {
        "name" : "dataFormatConfig.useCustomDelimiter",
        "value" : false
      }, {
        "name" : "dataFormatConfig.customDelimiter",
        "value" : "\\r\\n"
      }, {
        "name" : "dataFormatConfig.includeCustomDelimiterInTheText",
        "value" : false
      }, {
        "name" : "dataFormatConfig.jsonContent",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "dataFormatConfig.jsonMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "dataFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "dataFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "dataFormatConfig.csvAllowExtraColumns",
        "value" : false
      }, {
        "name" : "dataFormatConfig.csvExtraColumnPrefix",
        "value" : "_extra_"
      }, {
        "name" : "dataFormatConfig.csvMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "dataFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "dataFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "dataFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "dataFormatConfig.csvEnableComments",
        "value" : false
      }, {
        "name" : "dataFormatConfig.csvCommentMarker",
        "value" : "#"
      }, {
        "name" : "dataFormatConfig.csvIgnoreEmptyLines",
        "value" : false
      }, {
        "name" : "dataFormatConfig.csvRecordType",
        "value" : "LIST_MAP"
      }, {
        "name" : "dataFormatConfig.csvSkipStartLines",
        "value" : 0
      }, {
        "name" : "dataFormatConfig.parseNull",
        "value" : false
      }, {
        "name" : "dataFormatConfig.nullConstant",
        "value" : "\\\\N"
      }, {
        "name" : "dataFormatConfig.xmlRecordElement",
        "value" : null
      }, {
        "name" : "dataFormatConfig.includeFieldXpathAttributes",
        "value" : false
      }, {
        "name" : "dataFormatConfig.xPathNamespaceContext",
        "value" : [ ]
      }, {
        "name" : "dataFormatConfig.outputFieldAttributes",
        "value" : false
      }, {
        "name" : "dataFormatConfig.xmlMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "dataFormatConfig.logMode",
        "value" : "COMMON_LOG_FORMAT"
      }, {
        "name" : "dataFormatConfig.logMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "dataFormatConfig.retainOriginalLine",
        "value" : false
      }, {
        "name" : "dataFormatConfig.customLogFormat",
        "value" : "%h %l %u %t \"%r\" %>s %b"
      }, {
        "name" : "dataFormatConfig.regex",
        "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
      }, {
        "name" : "dataFormatConfig.fieldPathsToGroupName",
        "value" : [ {
          "fieldPath" : "/",
          "group" : 1
        } ]
      }, {
        "name" : "dataFormatConfig.grokPatternDefinition",
        "value" : null
      }, {
        "name" : "dataFormatConfig.grokPattern",
        "value" : "%{COMMONAPACHELOG}"
      }, {
        "name" : "dataFormatConfig.onParseError",
        "value" : "ERROR"
      }, {
        "name" : "dataFormatConfig.maxStackTraceLines",
        "value" : 50
      }, {
        "name" : "dataFormatConfig.enableLog4jCustomLogFormat",
        "value" : false
      }, {
        "name" : "dataFormatConfig.log4jCustomLogFormat",
        "value" : "%r [%t] %-5p %c %x - %m%n"
      }, {
        "name" : "dataFormatConfig.avroSchemaSource",
        "value" : null
      }, {
        "name" : "dataFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "dataFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "dataFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "dataFormatConfig.subject",
        "value" : null
      }, {
        "name" : "dataFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "dataFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "dataFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "dataFormatConfig.isDelimited",
        "value" : false
      }, {
        "name" : "dataFormatConfig.binaryMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "dataFormatConfig.datagramMode",
        "value" : "SYSLOG"
      }, {
        "name" : "dataFormatConfig.typesDbPath",
        "value" : null
      }, {
        "name" : "dataFormatConfig.convertTime",
        "value" : false
      }, {
        "name" : "dataFormatConfig.excludeInterval",
        "value" : false
      }, {
        "name" : "dataFormatConfig.authFilePath",
        "value" : null
      }, {
        "name" : "dataFormatConfig.netflowOutputValuesMode",
        "value" : "RAW_AND_INTERPRETED"
      }, {
        "name" : "dataFormatConfig.maxTemplateCacheSize",
        "value" : -1
      }, {
        "name" : "dataFormatConfig.templateCacheTimeoutMs",
        "value" : -1
      }, {
        "name" : "dataFormatConfig.netflowOutputValuesModeDatagram",
        "value" : "RAW_AND_INTERPRETED"
      }, {
        "name" : "dataFormatConfig.maxTemplateCacheSizeDatagram",
        "value" : -1
      }, {
        "name" : "dataFormatConfig.templateCacheTimeoutMsDatagram",
        "value" : -1
      }, {
        "name" : "dataFormatConfig.wholeFileMaxObjectLen",
        "value" : 8192
      }, {
        "name" : "dataFormatConfig.rateLimit",
        "value" : "-1"
      }, {
        "name" : "dataFormatConfig.verifyChecksum",
        "value" : false
      }, {
        "name" : "dataFormatConfig.excelHeader",
        "value" : null
      } ]
    } ]
  },
  "valid" : true,
  "issues" : {
    "pipelineIssues" : [ ],
    "issueCount" : 0,
    "stageIssues" : { }
  },
  "previewable" : true
}